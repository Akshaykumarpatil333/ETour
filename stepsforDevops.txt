*******************************DOCKER******************************************************
Step1:create docker image of mysql database with password and database name
docker run -p 3307:3306 --name mysqldb -e MYSQL_ROOT_PASSWORD=test@123 -e MYSQL_DATABASE=employee_management_system mysql:8.0.31

step 3:application.properties
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/employee_management_system
spring.datasource.username=${MYSQL_USER:root}
spring.datasource.password=${MYSQL_PASSWORD:test@123}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

step 4:create docker network and connect mysql container with that
docker network create springmysql.net
docker network connect springmysql.net mysqldb

step5:-create docker image of app and connect with network ,provide all databse details

docker run -p 9094:9092  --name spring-boot-backendmysql-docker  --net springmysql.net  -e MYSQL_HOST=mysqldb  -e MYSQL_USER=root  -e MYSQL_PASSWORD=test@123  -e MYSQL_PORT=3306  spring-boot-backendmysql-docker.jar


docker stop containerid

docker -v
docker build -t spring-boot-backendmysql-docker.jar .
docker ps -a
docker rm containerid
docker rmi -f imageid
docker network rm networkid
docker network inspect springmysql.net
docker login
docker tag spring-boot-backendmysql-docker.jar akshaykumarpatil333/spring-boot-backendmysql-docker.jar
docker push akshaykumarpatil333/spring-boot-backendmysql-docker.jar
docker tag 8.0.31 akshaykumarpatil333/mysql
docker push akshaykumarpatil333/8.0.31
**********************************************************************JENKINS***********************************************************************
java -jar jenkins.war